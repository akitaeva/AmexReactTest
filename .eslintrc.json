{
  // Extend recommended configurations for JavaScript, React, TypeScript, and Prettier integration
  "extends": [
    "eslint:recommended", // Basic JavaScript linting rules
    "plugin:react/recommended", // Recommended React-specific linting rules
    "plugin:@typescript-eslint/recommended", // TypeScript-specific linting rules
    "plugin:react-hooks/recommended", // Rules for React hooks
    "plugin:jsx-a11y/recommended", // Accessibility linting for JSX
    "prettier" // Integrates Prettier for formatting consistency
  ],
  // Define additional plugins
  "plugins": [
    "react", // Enables React linting rules
    "@typescript-eslint", // Enables TypeScript-specific rules
    "react-hooks", // Ensures proper usage of React hooks
    "jsx-a11y" // Encourages accessibility in JSX
  ],
  // Specify environments to define global variables
  "env": {
    "browser": true, // Adds browser-specific globals (e.g., `window`)
    "es2021": true, // Enables ES2021 globals and syntax
    "node": true // Allows Node.js global variables and Node.js scoping
  },
  // Configure parser options for TypeScript and JSX
  "parserOptions": {
    "ecmaVersion": 2021, // Supports modern ECMAScript features
    "sourceType": "module", // Allows usage of `import` and `export`
    "ecmaFeatures": {
      "jsx": true // Enables linting for JSX
    }
  },
  // Custom rules to override defaults or add specific behaviors
  "rules": {
    "react/prop-types": "off",  // Turn off prop-types rule as TypeScript is used
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }], // Alow unused variables if they start with an underscore
    "jsx-a11y/anchor-is-valid": "warn" // Warn against missing accessibility attributes
  }
}